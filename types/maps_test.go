package types

import (
	"testing"

	"github.com/sereiner/library/ut"
)

type Person struct {
	Name   string
	Age    int
	Emails []string
}

//MemberState 用户信息
type MemberState struct {
	Password string `m2s:"password"`
	LoginState

	UserID       int64  `json:"user_id" m2s:"user_id"`
	UserName     string `json:"user_name" m2s:"user_name"`
	SystemID     int    `json:"sys_id" `
	RoleID       int    `json:"role_id"`
	Status       int    `json:"status" m2s:"status"`
	IndexURL     string `json:"index_url"`
	LoginTimeout int    `json:"login_timeout" m2s:"login_timeout"`
}

//LoginState 用户信息
type LoginState struct {
	UserID       int64  `json:"user_id" m2s:"user_id"`
	UserName     string `json:"user_name" m2s:"user_name"`
	SystemID     int    `json:"sys_id" `
	RoleID       int    `json:"role_id"`
	Status       int    `json:"status" m2s:"status"`
	IndexURL     string `json:"index_url"`
	LoginTimeout int    `json:"login_timeout" m2s:"login_timeout"`
}

func TestMap2Struct(t *testing.T) {

	// This input can come from anywhere, but typically comes from
	// something like decoding JSON, generated by a weakly typed language
	// such as PHP.
	input := map[string]interface{}{
		"user_id":   "1000",  // number => string
		"user_name": "colin", // string => number
		"password":  "123456",
		"status":    "0",
		// empty map => empty array
	}
	var result MemberState
	err := Map2Struct(input, &result)
	if err != nil {
		t.Error(err)
	}
	ut.Expect(t, result.UserName, "colin")
}
